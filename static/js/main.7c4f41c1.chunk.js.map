{"version":3,"sources":["components/quoteDB.js","components/AuthorContainer.js","components/QuoteContainer.js","components/ButtonsContainer.js","components/BoxContainer.js","App.js","reportWebVitals.js","index.js"],"names":["AuthorContainer","className","id","this","props","author","Component","QuoteContainer","style","color","icon","faQuoteLeft","quote","ButtonsContainer","backgroundColor","onClick","handleClick","href","target","quotes","authors","replace","slice","split","quotes_dict","i","length","BoxContainer","state","click","returnQuote","bind","returnAuthor","ColorGen","setState","R","Math","floor","random","increment","colorString","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c4f41c1.chunk.js","sourcesContent":["export const quotes = [\"You have to write the book that wants to be written. And if the book will be too difficult for grown-ups, then you write it for children.\",\n\"If you don't have time to read, you don't have the time (or the tools) to write. Simple as that.\",\n\"We write to taste life twice, in the moment and in retrospect.\",\n\"Substitute 'damn' every time you're inclined to write 'very;' your editor will delete it and the writing will be just as it should be.\",\n\"If there's a book that you want to read, but it hasn't been written yet, then you must write it.\",\n\"One day I will find the right words, and they will be simple.\",\n\"Either write something worth reading or do something worth writing.\",\n\"You never have to change anything you got up in the middle of the night to write.\",\n\"No tears in the writer, no tears in the reader. No surprise in the writer, no surprise in the reader.\",\n\"Read, read, read. Read everything -- trash, classics, good and bad, and see how they do it. Just like a carpenter who works as an apprentice and studies the master. Read! You'll absorb it. Then write. If it's good, you'll find out. If it's not, throw it out of the window.\",\n\"You must stay drunk on writing so reality cannot destroy you.\",\n\"Words can be like X-rays if you use them properly -- they'll go through anything. You read and you're pierced.\",\n\"How vain it is to sit down to write when you have not stood up to live.\",\n\"I can shake off everything as I write; my sorrows disappear, my courage is reborn.\",\n\"A writer is someone for whom writing is more difficult than it is for other people.\",\n\"Let me live, love, and say it well in good sentences.\",\n\"Here is a lesson in creative writing. First rule: Do not use semicolons. They are transvestite hermaphrodites representing absolutely nothing. All they do is show you've been to college.\",\n\"Don't bend; don't water it down; don't try to make it logical; don't edit your own soul according to the fashion. Rather, follow your most intense obsessions mercilessly.\",\n\"I kept always two books in my pocket, one to read, one to write in.\",\n\"You can make anything by writing.\",\n\"A word after a word after a word is power.\",\n\"Tears are words that need to be written.\",\n\"You should write because you love the shape of stories and sentences and the creation of different words on a page. Writing comes from reading, and reading is the finest teacher of how to write.\",\n\"Writing is like sex. First you do it for love, then you do it for your friends, and then you do it for money.\",\n\"To survive, you must tell stories.\",\n]\n\nconst authors_str = '\"--Madeleine L\\'Engle\",\"--Stephen King\",\"--Anaïs Nin\",\"--Mark Twain\",\"--Toni Morrison\",\"--Jack Kerouac: The Dharma Bums\",\"--Benjamin Franklin\",\"--Saul Bellow\",\"--Robert Frost\",\"--William Faulkner\",\"--Ray Bradbury: Zen in the Art of Writing\",\"--Aldous Huxley: Brave New World\",\"--Henry David Thoreau\",\"--Anne Frank\",\"--Thomas Mann: Essays of Three Decades\",\"--Sylvia Plath: The Unabridged Journals of Sylvia Plath\",\"--Kurt Vonnegut Jr.: A Man Without a Country\",\"--Franz Kafka\",\"--Robert Louis Stevenson\",\"--C.S. Lewis\",\"--Margaret Atwood\",\"--Paulo Coelho\",\"--Annie Proulx\",\"--Virginia Woolf\",\"--Umberto Eco: The Island of the Day Before\"'\nlet regex = /\"|-/g;\n\nexport let authors = authors_str.replace(regex, '').slice().split(',');\n\nexport const quotes_dict = {};\n\nfor (let i = 0; i< authors.length; i++){\n    // let rand = quotes[i] + authors[i];\n    quotes_dict[i] = [quotes[i], authors[i]];\n}\n\n","import React, { Component } from 'react'\nimport './body.css';\n\nclass AuthorContainer extends Component {\n    render() {\n        return (\n            <div className=\"quote-author\">\n                -\n\t\t\t<span id=\"author\">{this.props.author}</span>\t\n            </div>\n        )\n    }\n}\n\nexport default AuthorContainer;","import { faQuoteLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { Component } from 'react'\nimport './body.css';\n\nclass QuoteContainer extends Component {\n    render() {\n\n        return (\n            <div className=\"quote-text\">\n                <FontAwesomeIcon \n                style={{color: this.props.color}} \n                id=\"quoteLeft\" \n                icon={faQuoteLeft} />\n                <span \n                style={{color: this.props.color}} \n                id=\"text\">{' ' +this.props.quote}</span>\n            </div>\n        )\n    }\n}\n\nexport default QuoteContainer;","import React, { Component } from 'react'\n\nexport default class ButtonsContainer extends Component {\n    render() {\n        \n        return (\n            <div className=\"buttons\">\n                <button style={{backgroundColor: this.props.color}} id=\"new-quote\" onClick={this.props.handleClick}>new quote</button>\n\t\t\t    <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\" target=\"_top\"> </a>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport './body.css';\nimport AuthorContainer from './AuthorContainer';\nimport QuoteContainer from './QuoteContainer';\nimport ButtonsContainer from './ButtonsContainer';\nimport { quotes, quotes_dict } from './quoteDB';\n\nclass BoxContainer extends Component {\n    constructor(props){\n        super(props);\n        \n        this.state = {\n            click: 0,\n            color: ''\n        }\n        this.returnQuote = this.returnQuote.bind(this);\n        this.returnAuthor = this.returnAuthor.bind(this);\n        this.handleClick = this.handleClick.bind(this);\n        this.ColorGen = this.ColorGen.bind(this);\n    }\n\n    returnQuote() {\n        return quotes_dict[this.state.click][0];\n    }\n    returnAuthor() {\n        return quotes_dict[this.state.click][1];\n    }\n    handleClick() {\n        if (this.state.click === quotes.length - 1) {\n            this.setState({click: 0});\n        }\n        else {\n            this.setState({click: this.state.click + 1})\n            return this.ColorGen();\n        }\n    }\n\n    ColorGen() {\n        let R = Math.floor(Math.random()*170);\n        let increment = Math.floor(R/17);\n        let G = Math.floor(Math.random()*130) + increment;\n        let B = 50 + increment;\n        let colorString = 'rgb(' + R + ',' + G + ',' + B + ')';\n        this.setState({\n            color: colorString\n        })\n        return (this.state.color);\n    }\n\n    render() {\n        return (\n            <div style={{backgroundColor: this.state.color}} className=\"body-chacha\">\n                <div id=\"quote-box\" >\n                    <QuoteContainer color={this.state.color} quote={this.returnQuote()}/>\n                    <AuthorContainer author={this.returnAuthor()}/>\n                    <ButtonsContainer color={this.state.color} handleClick={this.handleClick}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default BoxContainer;","import './App.css';\nimport BoxContainer from './components/BoxContainer';\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <BoxContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}